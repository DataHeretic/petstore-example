---
what: 
  deletes foos by id xor (color and/or shape)

DELETE: /foos?{id}{color}{shape}

params:
  declarations:
    id:    Int   range  (1,4000000)
    color: UTF8  length (1,16)
    shape: ASCII regex  ^(circle|square|[a-z]+gon)$ # circle, square, hexagon, pentagon,...
  combinations:
    (id |xor| (color |or| shape)) # id xor (color or shape) must be set

# see `user_roles.yaml`
# if this is absent, full access is silently granted.
# since the special `resource_owner` role is specified, we need an `resource_ownership_test`
# to determine if the user is indeed an owner.
access_control: [store_owner, admin, resource_owner]

# Testing for resource_ownership. Default is false
#
# general switch statement, can embed all top-level declarations that will "percolate up",
# including nested `switch` statements
switch:
  -
    case: (headers.User_Id |and| id)
    resource_ownership_test: 
      query: # returning a row signifies success; empty result-set is failure
        select * from foo where id={id} and foo_owner_id={headers.User_Id}
  -
    case: (headers.User_Id |and| (color |or| shape))
    resource_ownership_test: 
      query: |-
        select * from foo 
          where
            foo_owner_id={headers.User_Id} and
            [(color) color={color}]
            [(shape) and shape={shape}];
  - 
    # default case has no `case` clause
    resource_ownership_test:
      expression: (F) # always false

switch:
  -
    case: (id) # if `id` exists 
    query:
      delete from foo where id={id};
  -
    case: (color |or| shape)
    query: |-
    delete from foo 
      where
        [(color) color={color}]
        [(shape) and shape={shape}];

# Record and test the expected behavior of the query, if you'd like
 tests:
    -
      it: should properly set the resource ownership test
      when:
        headers:
          User_Id: 123abc
        params:
          id: doggo123
      then:
        endpoint_meta:
          resource_ownership_test:
            query: |-
              select * from foo where id={id} and foo_owner_id={headers.User_Id}
 


 

 